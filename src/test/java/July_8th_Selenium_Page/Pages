Selenium BASICS:
	methods that work with page as whole:
		get,navigate().to()
		navigate().forward()
		navigate().back()
		navigate().refresh()
		getTitle()
		getPageSource()
		getCurrentUrl()
		close(),quit()
	WebElements:
		findElement
		findElements
		By class
			By.id()
			By.name()
			By.className()
			By.xpath()
			By.css()
			By.linkTest()
			By.partialLinkText()
		
	After finding Element:
		click()
		sendKeys()
		clear()
		getText()
		getAttribute("")
		isDisplayed()
		isEnabled()
		isSelected()
	More actions on Elements
	
MUTIPLE WINDOWS/TABS/ALERTS
	->getWindowHandle()
	->getWindowHandles()-> Set Of Strings
		driver.switchTo().window()
	->Alert as = driver.switchTo().aAlert()
	al.accept/dismiss/getText/sendKeys etc
	
IFRAMES:
	driver.switchTo().frame()
		->WebElement
		->id
		->name
		->index

----------------------------------------------
		PAGEfACTORY , PAGE OBJECT MODEL DESIGN
		waits-> implicit/ Explicit/Fluent

==================================================
TestNG--> For Testing
Maven--> build management
	--> dependency management 

GIT + GITHUB+VC
--------------------------
Selenium Listeners:
----------------------------------
code project is in GitHub
git clone repo_url

	
		
---------------------==========
Page Obhject model design :
	It is very popular design in selenium 
	Automation. 
	For each page in web application , we create dedicated Java class.
	Normal java class:
		Fields/ Variable/Data 
		Methods/ Behavior
	In POM design:
		we store WebElements on that page as Fields/Variables
		we Write methods in page class for the actions that you do on that page 

=============================================================
Step 1) enter userName
step	 2) enter password
step 3) click login
step 4) " Welcome,Tester!" make sure is display

Benefits of POM design:
	reusable code 
	centralized maintenance of all element locators 
	easy to read the code /readable
	easy to maintain the code
	can create new tests efficiently 
	-------------
	
	Step 1 enter invalid nuserName
	Step 2 enter valid password 
	Step 3 click login 
	Step 4 "Invalid lOGIN or Password ." message should be display
	
================================

	public WebOderLoginPage(WebDriver driver) {
		PageFactory.initElements(driver, this);
	}

	PageFactory.initElements(driver,this);
	is a special class in Selenium that is written to support page object model design 
	
	The above line , initializes all elements using the driver provided 

Page Object model design 
------------------------
When you have a test case to automate .
	1) Manually execute it and mame sure it is working / passing . Understand the test case
	2) Automation:
		- create page object classes if not already exists .For each page that is part of the test case
		- add all elements that are affected by the test as variables for the page object class
		- specify locators using @Findby annotation.
		- create a TestNG test and use page objects and elements according to test case.
		- Execute TestNG tests
		
=======================================
Step 1.Navigate to loginpage 
Step 2. Assert that you are on loginpage 
Step 3. Login using valid credentials 
Step 4. Verify following labels are displayed ;
	- Web Order;
	-List of All Orders;
	-Welcome , Tester!
	-view All orders
	-view all products 
	-Order
=======================================
In programming there are different patterns:
-sINGLETONS
-factory pattern 
-builder pattern 
......

In selenium test automation we use:
	POM--> page object model design pattern
	Singletons -> Driver class
	Factory -> for utilities 
	-----------------------
	
Step 1.Navigate to loginpage 
Step 2. Assert that you are on loginpage 
Step 3. Login using valid credentials 
Step 4. Click on view all producfts
Step 5.
	
	Product name	Price	Discount
	MyMoney	
	FamilyAlbum	
	ScreenSaver
Step 6. Verify prices  and discounts :
	MyMoney		$100	 	8%
	FamilyAlbum	$80		15%
	ScreenSaver	$20		10%
	

	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

		
		